   0  $accept : %entry% $end

   1  prog : exp EOF

   2  decs :
   3       | dec
   4       | decs dec

   5  dec : tydec
   6      | vardec
   7      | fundecs

   8  tydec : TYPE ID EQUAL ty

   9  ty : ID
  10     | LBRACE tyfields RBRACE
  11     | ARRAY OF ID COLON ID

  12  tyfields :
  13           | tyfield
  14           | tyfields COMMA tyfield

  15  tyfield : ID COLON ID

  16  vardec : VAR ID ASSIGN exp

  17  fundecs : fundec
  18          | fundecs fundec

  19  fundec : FUNCTION ID LPAREN tyfields RPAREN resultty EQUAL exp

  20  resultty :
  21           | COLON ID

  22  lvalue : ID
  23         | lvalue DOT ID
  24         | lvalue LBRACKET exp RBRACKET

  25  exp : NIL
  26      | lvalue
  27      | LPAREN expseq RPAREN
  28      | INT
  29      | STRING
  30      | MINUS exp
  31      | ID LBRACE records RBRACE
  32      | ID LPAREN funargs RPAREN
  33      | ID LBRACKET exp RBRACKET OF exp
  34      | exp op exp
  35      | exp compar exp
  36      | exp boolean exp
  37      | LET decs IN exp END
  38      | lvalue ASSIGN exp
  39      | IF exp THEN exp
  40      | IF exp THEN exp ELSE exp
  41      | WHILE exp DO exp
  42      | FOR ID ASSIGN exp TO exp DO exp
  43      | BREAK

  44  expseq : exp
  45         | expseq SEMICOLON exp

  46  records : record
  47          | records COMMA record

  48  record : ID EQUAL exp

  49  funargs :
  50          | exp
  51          | funargs COMMA exp

  52  op : PLUS
  53     | MINUS
  54     | TIMES
  55     | DIVIDE

  56  compar : LT
  57         | LE
  58         | GT
  59         | GE
  60         | EQUAL
  61         | NOTEQUAL

  62  boolean : AND
  63          | OR

  64  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (64)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	prog  goto 14
	exp  goto 15
	lvalue  goto 16


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	exp : NIL .  (25)

	.  reduce 25


state 4
	exp : WHILE . exp DO exp  (41)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 17
	lvalue  goto 16


state 5
	exp : FOR . ID ASSIGN exp TO exp DO exp  (42)

	ID  shift 18
	.  error


state 6
	exp : BREAK .  (43)

	.  reduce 43


7: shift/reduce conflict (shift 19, reduce 2) on VAR
7: shift/reduce conflict (shift 20, reduce 2) on FUNCTION
7: shift/reduce conflict (shift 21, reduce 2) on TYPE
state 7
	exp : LET . decs IN exp END  (37)
	decs : .  (2)

	VAR  shift 19
	FUNCTION  shift 20
	TYPE  shift 21
	IN  reduce 2

	decs  goto 22
	dec  goto 23
	tydec  goto 24
	vardec  goto 25
	fundecs  goto 26
	fundec  goto 27


state 8
	exp : IF . exp THEN exp  (39)
	exp : IF . exp THEN exp ELSE exp  (40)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 28
	lvalue  goto 16


state 9
	exp : LPAREN . expseq RPAREN  (27)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 29
	lvalue  goto 16
	expseq  goto 30


state 10
	exp : MINUS . exp  (30)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 31
	lvalue  goto 16


state 11
	exp : STRING .  (29)

	.  reduce 29


12: shift/reduce conflict (shift 34, reduce 22) on LBRACKET
state 12
	lvalue : ID .  (22)
	exp : ID . LBRACE records RBRACE  (31)
	exp : ID . LPAREN funargs RPAREN  (32)
	exp : ID . LBRACKET exp RBRACKET OF exp  (33)

	LPAREN  shift 32
	LBRACE  shift 33
	LBRACKET  shift 34
	EOF  reduce 22
	VAR  reduce 22
	TO  reduce 22
	IN  reduce 22
	END  reduce 22
	FUNCTION  reduce 22
	TYPE  reduce 22
	THEN  reduce 22
	ELSE  reduce 22
	DO  reduce 22
	RPAREN  reduce 22
	RBRACE  reduce 22
	RBRACKET  reduce 22
	COMMA  reduce 22
	DOT  reduce 22
	SEMICOLON  reduce 22
	ASSIGN  reduce 22
	PLUS  reduce 22
	MINUS  reduce 22
	TIMES  reduce 22
	DIVIDE  reduce 22
	OR  reduce 22
	AND  reduce 22
	EQUAL  reduce 22
	NOTEQUAL  reduce 22
	LT  reduce 22
	LE  reduce 22
	GT  reduce 22
	GE  reduce 22


state 13
	exp : INT .  (28)

	.  reduce 28


state 14
	%entry% : '\001' prog .  (64)

	.  reduce 64


state 15
	prog : exp . EOF  (1)
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	EOF  shift 35
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 16
	lvalue : lvalue . DOT ID  (23)
	lvalue : lvalue . LBRACKET exp RBRACKET  (24)
	exp : lvalue .  (26)
	exp : lvalue . ASSIGN exp  (38)

	LBRACKET  shift 51
	DOT  shift 52
	ASSIGN  shift 53
	EOF  reduce 26
	VAR  reduce 26
	TO  reduce 26
	IN  reduce 26
	END  reduce 26
	FUNCTION  reduce 26
	TYPE  reduce 26
	THEN  reduce 26
	ELSE  reduce 26
	DO  reduce 26
	RPAREN  reduce 26
	RBRACE  reduce 26
	RBRACKET  reduce 26
	COMMA  reduce 26
	SEMICOLON  reduce 26
	PLUS  reduce 26
	MINUS  reduce 26
	TIMES  reduce 26
	DIVIDE  reduce 26
	OR  reduce 26
	AND  reduce 26
	EQUAL  reduce 26
	NOTEQUAL  reduce 26
	LT  reduce 26
	LE  reduce 26
	GT  reduce 26
	GE  reduce 26


state 17
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : WHILE exp . DO exp  (41)

	DO  shift 54
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 18
	exp : FOR ID . ASSIGN exp TO exp DO exp  (42)

	ASSIGN  shift 55
	.  error


state 19
	vardec : VAR . ID ASSIGN exp  (16)

	ID  shift 56
	.  error


state 20
	fundec : FUNCTION . ID LPAREN tyfields RPAREN resultty EQUAL exp  (19)

	ID  shift 57
	.  error


state 21
	tydec : TYPE . ID EQUAL ty  (8)

	ID  shift 58
	.  error


state 22
	decs : decs . dec  (4)
	exp : LET decs . IN exp END  (37)

	VAR  shift 19
	IN  shift 59
	FUNCTION  shift 20
	TYPE  shift 21
	.  error

	dec  goto 60
	tydec  goto 24
	vardec  goto 25
	fundecs  goto 26
	fundec  goto 27


state 23
	decs : dec .  (3)

	.  reduce 3


state 24
	dec : tydec .  (5)

	.  reduce 5


state 25
	dec : vardec .  (6)

	.  reduce 6


26: shift/reduce conflict (shift 20, reduce 7) on FUNCTION
state 26
	dec : fundecs .  (7)
	fundecs : fundecs . fundec  (18)

	FUNCTION  shift 20
	VAR  reduce 7
	IN  reduce 7
	TYPE  reduce 7

	fundec  goto 61


state 27
	fundecs : fundec .  (17)

	.  reduce 17


state 28
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : IF exp . THEN exp  (39)
	exp : IF exp . THEN exp ELSE exp  (40)

	THEN  shift 62
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 29
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	expseq : exp .  (44)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	RPAREN  reduce 44
	SEMICOLON  reduce 44

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 30
	exp : LPAREN expseq . RPAREN  (27)
	expseq : expseq . SEMICOLON exp  (45)

	RPAREN  shift 63
	SEMICOLON  shift 64
	.  error


state 31
	exp : MINUS exp .  (30)
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	TIMES  shift 38
	DIVIDE  shift 39
	EOF  reduce 30
	VAR  reduce 30
	TO  reduce 30
	IN  reduce 30
	END  reduce 30
	FUNCTION  reduce 30
	TYPE  reduce 30
	THEN  reduce 30
	ELSE  reduce 30
	DO  reduce 30
	RPAREN  reduce 30
	RBRACE  reduce 30
	RBRACKET  reduce 30
	COMMA  reduce 30
	SEMICOLON  reduce 30
	PLUS  reduce 30
	MINUS  reduce 30
	OR  reduce 30
	AND  reduce 30
	EQUAL  reduce 30
	NOTEQUAL  reduce 30
	LT  reduce 30
	LE  reduce 30
	GT  reduce 30
	GE  reduce 30

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 32
	exp : ID LPAREN . funargs RPAREN  (32)
	funargs : .  (49)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	RPAREN  reduce 49
	COMMA  reduce 49

	exp  goto 65
	lvalue  goto 16
	funargs  goto 66


state 33
	exp : ID LBRACE . records RBRACE  (31)

	ID  shift 67
	.  error

	records  goto 68
	record  goto 69


state 34
	exp : ID LBRACKET . exp RBRACKET OF exp  (33)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 70
	lvalue  goto 16


state 35
	prog : exp EOF .  (1)

	.  reduce 1


state 36
	op : PLUS .  (52)

	.  reduce 52


state 37
	op : MINUS .  (53)

	.  reduce 53


state 38
	op : TIMES .  (54)

	.  reduce 54


state 39
	op : DIVIDE .  (55)

	.  reduce 55


state 40
	boolean : OR .  (63)

	.  reduce 63


state 41
	boolean : AND .  (62)

	.  reduce 62


state 42
	compar : EQUAL .  (60)

	.  reduce 60


state 43
	compar : NOTEQUAL .  (61)

	.  reduce 61


state 44
	compar : LT .  (56)

	.  reduce 56


state 45
	compar : LE .  (57)

	.  reduce 57


state 46
	compar : GT .  (58)

	.  reduce 58


state 47
	compar : GE .  (59)

	.  reduce 59


state 48
	exp : exp op . exp  (34)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 71
	lvalue  goto 16


state 49
	exp : exp compar . exp  (35)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 72
	lvalue  goto 16


state 50
	exp : exp boolean . exp  (36)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 73
	lvalue  goto 16


state 51
	lvalue : lvalue LBRACKET . exp RBRACKET  (24)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 74
	lvalue  goto 16


state 52
	lvalue : lvalue DOT . ID  (23)

	ID  shift 75
	.  error


state 53
	exp : lvalue ASSIGN . exp  (38)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 76
	lvalue  goto 16


state 54
	exp : WHILE exp DO . exp  (41)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 77
	lvalue  goto 16


state 55
	exp : FOR ID ASSIGN . exp TO exp DO exp  (42)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 78
	lvalue  goto 16


state 56
	vardec : VAR ID . ASSIGN exp  (16)

	ASSIGN  shift 79
	.  error


state 57
	fundec : FUNCTION ID . LPAREN tyfields RPAREN resultty EQUAL exp  (19)

	LPAREN  shift 80
	.  error


state 58
	tydec : TYPE ID . EQUAL ty  (8)

	EQUAL  shift 81
	.  error


state 59
	exp : LET decs IN . exp END  (37)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 82
	lvalue  goto 16


state 60
	decs : decs dec .  (4)

	.  reduce 4


state 61
	fundecs : fundecs fundec .  (18)

	.  reduce 18


state 62
	exp : IF exp THEN . exp  (39)
	exp : IF exp THEN . exp ELSE exp  (40)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 83
	lvalue  goto 16


state 63
	exp : LPAREN expseq RPAREN .  (27)

	.  reduce 27


state 64
	expseq : expseq SEMICOLON . exp  (45)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 84
	lvalue  goto 16


state 65
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	funargs : exp .  (50)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	RPAREN  reduce 50
	COMMA  reduce 50

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 66
	exp : ID LPAREN funargs . RPAREN  (32)
	funargs : funargs . COMMA exp  (51)

	RPAREN  shift 85
	COMMA  shift 86
	.  error


state 67
	record : ID . EQUAL exp  (48)

	EQUAL  shift 87
	.  error


state 68
	exp : ID LBRACE records . RBRACE  (31)
	records : records . COMMA record  (47)

	RBRACE  shift 88
	COMMA  shift 89
	.  error


state 69
	records : record .  (46)

	.  reduce 46


state 70
	exp : ID LBRACKET exp . RBRACKET OF exp  (33)
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	RBRACKET  shift 90
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


71: shift/reduce conflict (shift 36, reduce 34) on PLUS
71: shift/reduce conflict (shift 37, reduce 34) on MINUS
71: shift/reduce conflict (shift 38, reduce 34) on TIMES
71: shift/reduce conflict (shift 39, reduce 34) on DIVIDE
71: shift/reduce conflict (shift 40, reduce 34) on OR
71: shift/reduce conflict (shift 41, reduce 34) on AND
71: shift/reduce conflict (shift 42, reduce 34) on EQUAL
71: shift/reduce conflict (shift 43, reduce 34) on NOTEQUAL
71: shift/reduce conflict (shift 44, reduce 34) on LT
71: shift/reduce conflict (shift 45, reduce 34) on LE
71: shift/reduce conflict (shift 46, reduce 34) on GT
71: shift/reduce conflict (shift 47, reduce 34) on GE
state 71
	exp : exp . op exp  (34)
	exp : exp op exp .  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 34
	VAR  reduce 34
	TO  reduce 34
	IN  reduce 34
	END  reduce 34
	FUNCTION  reduce 34
	TYPE  reduce 34
	THEN  reduce 34
	ELSE  reduce 34
	DO  reduce 34
	RPAREN  reduce 34
	RBRACE  reduce 34
	RBRACKET  reduce 34
	COMMA  reduce 34
	SEMICOLON  reduce 34

	op  goto 48
	compar  goto 49
	boolean  goto 50


72: shift/reduce conflict (shift 36, reduce 35) on PLUS
72: shift/reduce conflict (shift 37, reduce 35) on MINUS
72: shift/reduce conflict (shift 38, reduce 35) on TIMES
72: shift/reduce conflict (shift 39, reduce 35) on DIVIDE
72: shift/reduce conflict (shift 40, reduce 35) on OR
72: shift/reduce conflict (shift 41, reduce 35) on AND
72: shift/reduce conflict (shift 42, reduce 35) on EQUAL
72: shift/reduce conflict (shift 43, reduce 35) on NOTEQUAL
72: shift/reduce conflict (shift 44, reduce 35) on LT
72: shift/reduce conflict (shift 45, reduce 35) on LE
72: shift/reduce conflict (shift 46, reduce 35) on GT
72: shift/reduce conflict (shift 47, reduce 35) on GE
state 72
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp compar exp .  (35)
	exp : exp . boolean exp  (36)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 35
	VAR  reduce 35
	TO  reduce 35
	IN  reduce 35
	END  reduce 35
	FUNCTION  reduce 35
	TYPE  reduce 35
	THEN  reduce 35
	ELSE  reduce 35
	DO  reduce 35
	RPAREN  reduce 35
	RBRACE  reduce 35
	RBRACKET  reduce 35
	COMMA  reduce 35
	SEMICOLON  reduce 35

	op  goto 48
	compar  goto 49
	boolean  goto 50


73: shift/reduce conflict (shift 36, reduce 36) on PLUS
73: shift/reduce conflict (shift 37, reduce 36) on MINUS
73: shift/reduce conflict (shift 38, reduce 36) on TIMES
73: shift/reduce conflict (shift 39, reduce 36) on DIVIDE
73: shift/reduce conflict (shift 40, reduce 36) on OR
73: shift/reduce conflict (shift 41, reduce 36) on AND
73: shift/reduce conflict (shift 42, reduce 36) on EQUAL
73: shift/reduce conflict (shift 43, reduce 36) on NOTEQUAL
73: shift/reduce conflict (shift 44, reduce 36) on LT
73: shift/reduce conflict (shift 45, reduce 36) on LE
73: shift/reduce conflict (shift 46, reduce 36) on GT
73: shift/reduce conflict (shift 47, reduce 36) on GE
state 73
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : exp boolean exp .  (36)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 36
	VAR  reduce 36
	TO  reduce 36
	IN  reduce 36
	END  reduce 36
	FUNCTION  reduce 36
	TYPE  reduce 36
	THEN  reduce 36
	ELSE  reduce 36
	DO  reduce 36
	RPAREN  reduce 36
	RBRACE  reduce 36
	RBRACKET  reduce 36
	COMMA  reduce 36
	SEMICOLON  reduce 36

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 74
	lvalue : lvalue LBRACKET exp . RBRACKET  (24)
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	RBRACKET  shift 91
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 75
	lvalue : lvalue DOT ID .  (23)

	.  reduce 23


state 76
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : lvalue ASSIGN exp .  (38)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 38
	VAR  reduce 38
	TO  reduce 38
	IN  reduce 38
	END  reduce 38
	FUNCTION  reduce 38
	TYPE  reduce 38
	THEN  reduce 38
	ELSE  reduce 38
	DO  reduce 38
	RPAREN  reduce 38
	RBRACE  reduce 38
	RBRACKET  reduce 38
	COMMA  reduce 38
	SEMICOLON  reduce 38

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 77
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : WHILE exp DO exp .  (41)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 41
	VAR  reduce 41
	TO  reduce 41
	IN  reduce 41
	END  reduce 41
	FUNCTION  reduce 41
	TYPE  reduce 41
	THEN  reduce 41
	ELSE  reduce 41
	DO  reduce 41
	RPAREN  reduce 41
	RBRACE  reduce 41
	RBRACKET  reduce 41
	COMMA  reduce 41
	SEMICOLON  reduce 41

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 78
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : FOR ID ASSIGN exp . TO exp DO exp  (42)

	TO  shift 92
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 79
	vardec : VAR ID ASSIGN . exp  (16)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 93
	lvalue  goto 16


state 80
	fundec : FUNCTION ID LPAREN . tyfields RPAREN resultty EQUAL exp  (19)
	tyfields : .  (12)

	ID  shift 94
	RPAREN  reduce 12
	COMMA  reduce 12

	tyfields  goto 95
	tyfield  goto 96


state 81
	tydec : TYPE ID EQUAL . ty  (8)

	ARRAY  shift 97
	LBRACE  shift 98
	ID  shift 99
	.  error

	ty  goto 100


state 82
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : LET decs IN exp . END  (37)

	END  shift 101
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 83
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : IF exp THEN exp .  (39)
	exp : IF exp THEN exp . ELSE exp  (40)

	ELSE  shift 102
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 39
	VAR  reduce 39
	TO  reduce 39
	IN  reduce 39
	END  reduce 39
	FUNCTION  reduce 39
	TYPE  reduce 39
	THEN  reduce 39
	DO  reduce 39
	RPAREN  reduce 39
	RBRACE  reduce 39
	RBRACKET  reduce 39
	COMMA  reduce 39
	SEMICOLON  reduce 39

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 84
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	expseq : expseq SEMICOLON exp .  (45)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	RPAREN  reduce 45
	SEMICOLON  reduce 45

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 85
	exp : ID LPAREN funargs RPAREN .  (32)

	.  reduce 32


state 86
	funargs : funargs COMMA . exp  (51)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 103
	lvalue  goto 16


state 87
	record : ID EQUAL . exp  (48)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 104
	lvalue  goto 16


state 88
	exp : ID LBRACE records RBRACE .  (31)

	.  reduce 31


state 89
	records : records COMMA . record  (47)

	ID  shift 67
	.  error

	record  goto 105


state 90
	exp : ID LBRACKET exp RBRACKET . OF exp  (33)

	OF  shift 106
	.  error


state 91
	lvalue : lvalue LBRACKET exp RBRACKET .  (24)

	.  reduce 24


state 92
	exp : FOR ID ASSIGN exp TO . exp DO exp  (42)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 107
	lvalue  goto 16


state 93
	vardec : VAR ID ASSIGN exp .  (16)
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	VAR  reduce 16
	IN  reduce 16
	FUNCTION  reduce 16
	TYPE  reduce 16

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 94
	tyfield : ID . COLON ID  (15)

	COLON  shift 108
	.  error


state 95
	tyfields : tyfields . COMMA tyfield  (14)
	fundec : FUNCTION ID LPAREN tyfields . RPAREN resultty EQUAL exp  (19)

	RPAREN  shift 109
	COMMA  shift 110
	.  error


state 96
	tyfields : tyfield .  (13)

	.  reduce 13


state 97
	ty : ARRAY . OF ID COLON ID  (11)

	OF  shift 111
	.  error


state 98
	ty : LBRACE . tyfields RBRACE  (10)
	tyfields : .  (12)

	ID  shift 94
	RBRACE  reduce 12
	COMMA  reduce 12

	tyfields  goto 112
	tyfield  goto 96


state 99
	ty : ID .  (9)

	.  reduce 9


state 100
	tydec : TYPE ID EQUAL ty .  (8)

	.  reduce 8


state 101
	exp : LET decs IN exp END .  (37)

	.  reduce 37


state 102
	exp : IF exp THEN exp ELSE . exp  (40)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 113
	lvalue  goto 16


state 103
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	funargs : funargs COMMA exp .  (51)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	RPAREN  reduce 51
	COMMA  reduce 51

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 104
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	record : ID EQUAL exp .  (48)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	RBRACE  reduce 48
	COMMA  reduce 48

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 105
	records : records COMMA record .  (47)

	.  reduce 47


state 106
	exp : ID LBRACKET exp RBRACKET OF . exp  (33)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 114
	lvalue  goto 16


state 107
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : FOR ID ASSIGN exp TO exp . DO exp  (42)

	DO  shift 115
	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	.  error

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 108
	tyfield : ID COLON . ID  (15)

	ID  shift 116
	.  error


state 109
	fundec : FUNCTION ID LPAREN tyfields RPAREN . resultty EQUAL exp  (19)
	resultty : .  (20)

	COLON  shift 117
	EQUAL  reduce 20

	resultty  goto 118


state 110
	tyfields : tyfields COMMA . tyfield  (14)

	ID  shift 94
	.  error

	tyfield  goto 119


state 111
	ty : ARRAY OF . ID COLON ID  (11)

	ID  shift 120
	.  error


state 112
	ty : LBRACE tyfields . RBRACE  (10)
	tyfields : tyfields . COMMA tyfield  (14)

	RBRACE  shift 121
	COMMA  shift 110
	.  error


state 113
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : IF exp THEN exp ELSE exp .  (40)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 40
	VAR  reduce 40
	TO  reduce 40
	IN  reduce 40
	END  reduce 40
	FUNCTION  reduce 40
	TYPE  reduce 40
	THEN  reduce 40
	ELSE  reduce 40
	DO  reduce 40
	RPAREN  reduce 40
	RBRACE  reduce 40
	RBRACKET  reduce 40
	COMMA  reduce 40
	SEMICOLON  reduce 40

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 114
	exp : ID LBRACKET exp RBRACKET OF exp .  (33)
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 33
	VAR  reduce 33
	TO  reduce 33
	IN  reduce 33
	END  reduce 33
	FUNCTION  reduce 33
	TYPE  reduce 33
	THEN  reduce 33
	ELSE  reduce 33
	DO  reduce 33
	RPAREN  reduce 33
	RBRACE  reduce 33
	RBRACKET  reduce 33
	COMMA  reduce 33
	SEMICOLON  reduce 33

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 115
	exp : FOR ID ASSIGN exp TO exp DO . exp  (42)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 122
	lvalue  goto 16


state 116
	tyfield : ID COLON ID .  (15)

	.  reduce 15


state 117
	resultty : COLON . ID  (21)

	ID  shift 123
	.  error


state 118
	fundec : FUNCTION ID LPAREN tyfields RPAREN resultty . EQUAL exp  (19)

	EQUAL  shift 124
	.  error


state 119
	tyfields : tyfields COMMA tyfield .  (14)

	.  reduce 14


state 120
	ty : ARRAY OF ID . COLON ID  (11)

	COLON  shift 125
	.  error


state 121
	ty : LBRACE tyfields RBRACE .  (10)

	.  reduce 10


state 122
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)
	exp : FOR ID ASSIGN exp TO exp DO exp .  (42)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	EOF  reduce 42
	VAR  reduce 42
	TO  reduce 42
	IN  reduce 42
	END  reduce 42
	FUNCTION  reduce 42
	TYPE  reduce 42
	THEN  reduce 42
	ELSE  reduce 42
	DO  reduce 42
	RPAREN  reduce 42
	RBRACE  reduce 42
	RBRACKET  reduce 42
	COMMA  reduce 42
	SEMICOLON  reduce 42

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 123
	resultty : COLON ID .  (21)

	.  reduce 21


state 124
	fundec : FUNCTION ID LPAREN tyfields RPAREN resultty EQUAL . exp  (19)

	NIL  shift 3
	WHILE  shift 4
	FOR  shift 5
	BREAK  shift 6
	LET  shift 7
	IF  shift 8
	LPAREN  shift 9
	MINUS  shift 10
	STRING  shift 11
	ID  shift 12
	INT  shift 13
	.  error

	exp  goto 126
	lvalue  goto 16


state 125
	ty : ARRAY OF ID COLON . ID  (11)

	ID  shift 127
	.  error


state 126
	fundec : FUNCTION ID LPAREN tyfields RPAREN resultty EQUAL exp .  (19)
	exp : exp . op exp  (34)
	exp : exp . compar exp  (35)
	exp : exp . boolean exp  (36)

	PLUS  shift 36
	MINUS  shift 37
	TIMES  shift 38
	DIVIDE  shift 39
	OR  shift 40
	AND  shift 41
	EQUAL  shift 42
	NOTEQUAL  shift 43
	LT  shift 44
	LE  shift 45
	GT  shift 46
	GE  shift 47
	VAR  reduce 19
	IN  reduce 19
	FUNCTION  reduce 19
	TYPE  reduce 19

	op  goto 48
	compar  goto 49
	boolean  goto 50


state 127
	ty : ARRAY OF ID COLON ID .  (11)

	.  reduce 11


State 7 contains 3 shift/reduce conflicts.
State 12 contains 1 shift/reduce conflict.
State 26 contains 1 shift/reduce conflict.
State 71 contains 12 shift/reduce conflicts.
State 72 contains 12 shift/reduce conflicts.
State 73 contains 12 shift/reduce conflicts.


47 terminals, 22 nonterminals
65 grammar rules, 128 states
