   0  $accept : %entry% $end

   1  prog : exp EOF

   2  decs : dec

   3  dec : tydec
   4      | vardec
   5      | fundecs

   6  tydec : TYPE ID EQUAL ty

   7  ty : ID
   8     | LBRACE tyfields RBRACE
   9     | ARRAY OF ID COLON ID

  10  tyfields :
  11           | tyfield
  12           | tyfields COMMA tyfield

  13  tyfield : ID COLON ID

  14  vardec : VAR ID ASSIGN exp

  15  fundecs : fundec
  16          | fundecs fundec

  17  fundec : FUNCTION ID LPAREN tyfields RPAREN resultty EQUAL exp

  18  resultty :
  19           | COLON ID

  20  lvalue : ID
  21         | lvalue DOT ID
  22         | lvalue LBRACKET exp RBRACKET

  23  exp : lvalue
  24      | LPAREN expseq RPAREN
  25      | INT
  26      | STRING
  27      | MINUS exp
  28      | ID LBRACE records RBRACE
  29      | ID LPAREN funargs RPAREN
  30      | ID LBRACKET exp RBRACKET OF exp
  31      | exp op exp
  32      | exp compar exp
  33      | exp boolean exp
  34      | lvalue ASSIGN exp
  35      | IF exp THEN exp
  36      | IF exp THEN exp ELSE exp
  37      | WHILE exp DO exp
  38      | FOR ID ASSIGN exp TO exp DO exp
  39      | BREAK

  40  expseq : exp
  41         | expseq SEMICOLON exp

  42  records : record
  43          | records COMMA record

  44  record : ID EQUAL exp

  45  funargs :
  46          | exp
  47          | funargs COMMA exp

  48  op : PLUS
  49     | MINUS
  50     | TIMES
  51     | DIVIDE

  52  compar : LT
  53         | LE
  54         | GT
  55         | GE
  56         | EQUAL
  57         | NOTEQUAL

  58  boolean : AND
  59          | OR

  60  %entry% : '\001' prog

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . prog  (60)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	prog  goto 12
	exp  goto 13
	lvalue  goto 14


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	exp : WHILE . exp DO exp  (37)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 15
	lvalue  goto 14


state 4
	exp : FOR . ID ASSIGN exp TO exp DO exp  (38)

	ID  shift 16
	.  error


state 5
	exp : BREAK .  (39)

	.  reduce 39


state 6
	exp : IF . exp THEN exp  (35)
	exp : IF . exp THEN exp ELSE exp  (36)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 17
	lvalue  goto 14


state 7
	exp : LPAREN . expseq RPAREN  (24)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 18
	lvalue  goto 14
	expseq  goto 19


state 8
	exp : MINUS . exp  (27)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 20
	lvalue  goto 14


state 9
	exp : STRING .  (26)

	.  reduce 26


10: shift/reduce conflict (shift 23, reduce 20) on LBRACKET
state 10
	lvalue : ID .  (20)
	exp : ID . LBRACE records RBRACE  (28)
	exp : ID . LPAREN funargs RPAREN  (29)
	exp : ID . LBRACKET exp RBRACKET OF exp  (30)

	LPAREN  shift 21
	LBRACE  shift 22
	LBRACKET  shift 23
	EOF  reduce 20
	TO  reduce 20
	THEN  reduce 20
	ELSE  reduce 20
	DO  reduce 20
	RPAREN  reduce 20
	RBRACE  reduce 20
	RBRACKET  reduce 20
	COMMA  reduce 20
	DOT  reduce 20
	SEMICOLON  reduce 20
	ASSIGN  reduce 20
	PLUS  reduce 20
	MINUS  reduce 20
	TIMES  reduce 20
	DIVIDE  reduce 20
	OR  reduce 20
	AND  reduce 20
	EQUAL  reduce 20
	NOTEQUAL  reduce 20
	LT  reduce 20
	LE  reduce 20
	GT  reduce 20
	GE  reduce 20


state 11
	exp : INT .  (25)

	.  reduce 25


state 12
	%entry% : '\001' prog .  (60)

	.  reduce 60


state 13
	prog : exp . EOF  (1)
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)

	EOF  shift 24
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	.  error

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 14
	lvalue : lvalue . DOT ID  (21)
	lvalue : lvalue . LBRACKET exp RBRACKET  (22)
	exp : lvalue .  (23)
	exp : lvalue . ASSIGN exp  (34)

	LBRACKET  shift 40
	DOT  shift 41
	ASSIGN  shift 42
	EOF  reduce 23
	TO  reduce 23
	THEN  reduce 23
	ELSE  reduce 23
	DO  reduce 23
	RPAREN  reduce 23
	RBRACE  reduce 23
	RBRACKET  reduce 23
	COMMA  reduce 23
	SEMICOLON  reduce 23
	PLUS  reduce 23
	MINUS  reduce 23
	TIMES  reduce 23
	DIVIDE  reduce 23
	OR  reduce 23
	AND  reduce 23
	EQUAL  reduce 23
	NOTEQUAL  reduce 23
	LT  reduce 23
	LE  reduce 23
	GT  reduce 23
	GE  reduce 23


state 15
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : WHILE exp . DO exp  (37)

	DO  shift 43
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	.  error

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 16
	exp : FOR ID . ASSIGN exp TO exp DO exp  (38)

	ASSIGN  shift 44
	.  error


state 17
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : IF exp . THEN exp  (35)
	exp : IF exp . THEN exp ELSE exp  (36)

	THEN  shift 45
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	.  error

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 18
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	expseq : exp .  (40)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	RPAREN  reduce 40
	SEMICOLON  reduce 40

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 19
	exp : LPAREN expseq . RPAREN  (24)
	expseq : expseq . SEMICOLON exp  (41)

	RPAREN  shift 46
	SEMICOLON  shift 47
	.  error


state 20
	exp : MINUS exp .  (27)
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)

	TIMES  shift 27
	DIVIDE  shift 28
	EOF  reduce 27
	TO  reduce 27
	THEN  reduce 27
	ELSE  reduce 27
	DO  reduce 27
	RPAREN  reduce 27
	RBRACE  reduce 27
	RBRACKET  reduce 27
	COMMA  reduce 27
	SEMICOLON  reduce 27
	PLUS  reduce 27
	MINUS  reduce 27
	OR  reduce 27
	AND  reduce 27
	EQUAL  reduce 27
	NOTEQUAL  reduce 27
	LT  reduce 27
	LE  reduce 27
	GT  reduce 27
	GE  reduce 27

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 21
	exp : ID LPAREN . funargs RPAREN  (29)
	funargs : .  (45)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	RPAREN  reduce 45
	COMMA  reduce 45

	exp  goto 48
	lvalue  goto 14
	funargs  goto 49


state 22
	exp : ID LBRACE . records RBRACE  (28)

	ID  shift 50
	.  error

	records  goto 51
	record  goto 52


state 23
	exp : ID LBRACKET . exp RBRACKET OF exp  (30)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 53
	lvalue  goto 14


state 24
	prog : exp EOF .  (1)

	.  reduce 1


state 25
	op : PLUS .  (48)

	.  reduce 48


state 26
	op : MINUS .  (49)

	.  reduce 49


state 27
	op : TIMES .  (50)

	.  reduce 50


state 28
	op : DIVIDE .  (51)

	.  reduce 51


state 29
	boolean : OR .  (59)

	.  reduce 59


state 30
	boolean : AND .  (58)

	.  reduce 58


state 31
	compar : EQUAL .  (56)

	.  reduce 56


state 32
	compar : NOTEQUAL .  (57)

	.  reduce 57


state 33
	compar : LT .  (52)

	.  reduce 52


state 34
	compar : LE .  (53)

	.  reduce 53


state 35
	compar : GT .  (54)

	.  reduce 54


state 36
	compar : GE .  (55)

	.  reduce 55


state 37
	exp : exp op . exp  (31)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 54
	lvalue  goto 14


state 38
	exp : exp compar . exp  (32)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 55
	lvalue  goto 14


state 39
	exp : exp boolean . exp  (33)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 56
	lvalue  goto 14


state 40
	lvalue : lvalue LBRACKET . exp RBRACKET  (22)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 57
	lvalue  goto 14


state 41
	lvalue : lvalue DOT . ID  (21)

	ID  shift 58
	.  error


state 42
	exp : lvalue ASSIGN . exp  (34)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 59
	lvalue  goto 14


state 43
	exp : WHILE exp DO . exp  (37)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 60
	lvalue  goto 14


state 44
	exp : FOR ID ASSIGN . exp TO exp DO exp  (38)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 61
	lvalue  goto 14


state 45
	exp : IF exp THEN . exp  (35)
	exp : IF exp THEN . exp ELSE exp  (36)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 62
	lvalue  goto 14


state 46
	exp : LPAREN expseq RPAREN .  (24)

	.  reduce 24


state 47
	expseq : expseq SEMICOLON . exp  (41)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 63
	lvalue  goto 14


state 48
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	funargs : exp .  (46)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	RPAREN  reduce 46
	COMMA  reduce 46

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 49
	exp : ID LPAREN funargs . RPAREN  (29)
	funargs : funargs . COMMA exp  (47)

	RPAREN  shift 64
	COMMA  shift 65
	.  error


state 50
	record : ID . EQUAL exp  (44)

	EQUAL  shift 66
	.  error


state 51
	exp : ID LBRACE records . RBRACE  (28)
	records : records . COMMA record  (43)

	RBRACE  shift 67
	COMMA  shift 68
	.  error


state 52
	records : record .  (42)

	.  reduce 42


state 53
	exp : ID LBRACKET exp . RBRACKET OF exp  (30)
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)

	RBRACKET  shift 69
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	.  error

	op  goto 37
	compar  goto 38
	boolean  goto 39


54: shift/reduce conflict (shift 25, reduce 31) on PLUS
54: shift/reduce conflict (shift 26, reduce 31) on MINUS
54: shift/reduce conflict (shift 27, reduce 31) on TIMES
54: shift/reduce conflict (shift 28, reduce 31) on DIVIDE
54: shift/reduce conflict (shift 29, reduce 31) on OR
54: shift/reduce conflict (shift 30, reduce 31) on AND
54: shift/reduce conflict (shift 31, reduce 31) on EQUAL
54: shift/reduce conflict (shift 32, reduce 31) on NOTEQUAL
54: shift/reduce conflict (shift 33, reduce 31) on LT
54: shift/reduce conflict (shift 34, reduce 31) on LE
54: shift/reduce conflict (shift 35, reduce 31) on GT
54: shift/reduce conflict (shift 36, reduce 31) on GE
state 54
	exp : exp . op exp  (31)
	exp : exp op exp .  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 31
	TO  reduce 31
	THEN  reduce 31
	ELSE  reduce 31
	DO  reduce 31
	RPAREN  reduce 31
	RBRACE  reduce 31
	RBRACKET  reduce 31
	COMMA  reduce 31
	SEMICOLON  reduce 31

	op  goto 37
	compar  goto 38
	boolean  goto 39


55: shift/reduce conflict (shift 25, reduce 32) on PLUS
55: shift/reduce conflict (shift 26, reduce 32) on MINUS
55: shift/reduce conflict (shift 27, reduce 32) on TIMES
55: shift/reduce conflict (shift 28, reduce 32) on DIVIDE
55: shift/reduce conflict (shift 29, reduce 32) on OR
55: shift/reduce conflict (shift 30, reduce 32) on AND
55: shift/reduce conflict (shift 31, reduce 32) on EQUAL
55: shift/reduce conflict (shift 32, reduce 32) on NOTEQUAL
55: shift/reduce conflict (shift 33, reduce 32) on LT
55: shift/reduce conflict (shift 34, reduce 32) on LE
55: shift/reduce conflict (shift 35, reduce 32) on GT
55: shift/reduce conflict (shift 36, reduce 32) on GE
state 55
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp compar exp .  (32)
	exp : exp . boolean exp  (33)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 32
	TO  reduce 32
	THEN  reduce 32
	ELSE  reduce 32
	DO  reduce 32
	RPAREN  reduce 32
	RBRACE  reduce 32
	RBRACKET  reduce 32
	COMMA  reduce 32
	SEMICOLON  reduce 32

	op  goto 37
	compar  goto 38
	boolean  goto 39


56: shift/reduce conflict (shift 25, reduce 33) on PLUS
56: shift/reduce conflict (shift 26, reduce 33) on MINUS
56: shift/reduce conflict (shift 27, reduce 33) on TIMES
56: shift/reduce conflict (shift 28, reduce 33) on DIVIDE
56: shift/reduce conflict (shift 29, reduce 33) on OR
56: shift/reduce conflict (shift 30, reduce 33) on AND
56: shift/reduce conflict (shift 31, reduce 33) on EQUAL
56: shift/reduce conflict (shift 32, reduce 33) on NOTEQUAL
56: shift/reduce conflict (shift 33, reduce 33) on LT
56: shift/reduce conflict (shift 34, reduce 33) on LE
56: shift/reduce conflict (shift 35, reduce 33) on GT
56: shift/reduce conflict (shift 36, reduce 33) on GE
state 56
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : exp boolean exp .  (33)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 33
	TO  reduce 33
	THEN  reduce 33
	ELSE  reduce 33
	DO  reduce 33
	RPAREN  reduce 33
	RBRACE  reduce 33
	RBRACKET  reduce 33
	COMMA  reduce 33
	SEMICOLON  reduce 33

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 57
	lvalue : lvalue LBRACKET exp . RBRACKET  (22)
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)

	RBRACKET  shift 70
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	.  error

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 58
	lvalue : lvalue DOT ID .  (21)

	.  reduce 21


state 59
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : lvalue ASSIGN exp .  (34)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 34
	TO  reduce 34
	THEN  reduce 34
	ELSE  reduce 34
	DO  reduce 34
	RPAREN  reduce 34
	RBRACE  reduce 34
	RBRACKET  reduce 34
	COMMA  reduce 34
	SEMICOLON  reduce 34

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 60
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : WHILE exp DO exp .  (37)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 37
	TO  reduce 37
	THEN  reduce 37
	ELSE  reduce 37
	DO  reduce 37
	RPAREN  reduce 37
	RBRACE  reduce 37
	RBRACKET  reduce 37
	COMMA  reduce 37
	SEMICOLON  reduce 37

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 61
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : FOR ID ASSIGN exp . TO exp DO exp  (38)

	TO  shift 71
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	.  error

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 62
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : IF exp THEN exp .  (35)
	exp : IF exp THEN exp . ELSE exp  (36)

	ELSE  shift 72
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 35
	TO  reduce 35
	THEN  reduce 35
	DO  reduce 35
	RPAREN  reduce 35
	RBRACE  reduce 35
	RBRACKET  reduce 35
	COMMA  reduce 35
	SEMICOLON  reduce 35

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 63
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	expseq : expseq SEMICOLON exp .  (41)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	RPAREN  reduce 41
	SEMICOLON  reduce 41

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 64
	exp : ID LPAREN funargs RPAREN .  (29)

	.  reduce 29


state 65
	funargs : funargs COMMA . exp  (47)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 73
	lvalue  goto 14


state 66
	record : ID EQUAL . exp  (44)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 74
	lvalue  goto 14


state 67
	exp : ID LBRACE records RBRACE .  (28)

	.  reduce 28


state 68
	records : records COMMA . record  (43)

	ID  shift 50
	.  error

	record  goto 75


state 69
	exp : ID LBRACKET exp RBRACKET . OF exp  (30)

	OF  shift 76
	.  error


state 70
	lvalue : lvalue LBRACKET exp RBRACKET .  (22)

	.  reduce 22


state 71
	exp : FOR ID ASSIGN exp TO . exp DO exp  (38)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 77
	lvalue  goto 14


state 72
	exp : IF exp THEN exp ELSE . exp  (36)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 78
	lvalue  goto 14


state 73
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	funargs : funargs COMMA exp .  (47)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	RPAREN  reduce 47
	COMMA  reduce 47

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 74
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	record : ID EQUAL exp .  (44)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	RBRACE  reduce 44
	COMMA  reduce 44

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 75
	records : records COMMA record .  (43)

	.  reduce 43


state 76
	exp : ID LBRACKET exp RBRACKET OF . exp  (30)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 79
	lvalue  goto 14


state 77
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : FOR ID ASSIGN exp TO exp . DO exp  (38)

	DO  shift 80
	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	.  error

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 78
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : IF exp THEN exp ELSE exp .  (36)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 36
	TO  reduce 36
	THEN  reduce 36
	ELSE  reduce 36
	DO  reduce 36
	RPAREN  reduce 36
	RBRACE  reduce 36
	RBRACKET  reduce 36
	COMMA  reduce 36
	SEMICOLON  reduce 36

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 79
	exp : ID LBRACKET exp RBRACKET OF exp .  (30)
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 30
	TO  reduce 30
	THEN  reduce 30
	ELSE  reduce 30
	DO  reduce 30
	RPAREN  reduce 30
	RBRACE  reduce 30
	RBRACKET  reduce 30
	COMMA  reduce 30
	SEMICOLON  reduce 30

	op  goto 37
	compar  goto 38
	boolean  goto 39


state 80
	exp : FOR ID ASSIGN exp TO exp DO . exp  (38)

	WHILE  shift 3
	FOR  shift 4
	BREAK  shift 5
	IF  shift 6
	LPAREN  shift 7
	MINUS  shift 8
	STRING  shift 9
	ID  shift 10
	INT  shift 11
	.  error

	exp  goto 81
	lvalue  goto 14


state 81
	exp : exp . op exp  (31)
	exp : exp . compar exp  (32)
	exp : exp . boolean exp  (33)
	exp : FOR ID ASSIGN exp TO exp DO exp .  (38)

	PLUS  shift 25
	MINUS  shift 26
	TIMES  shift 27
	DIVIDE  shift 28
	OR  shift 29
	AND  shift 30
	EQUAL  shift 31
	NOTEQUAL  shift 32
	LT  shift 33
	LE  shift 34
	GT  shift 35
	GE  shift 36
	EOF  reduce 38
	TO  reduce 38
	THEN  reduce 38
	ELSE  reduce 38
	DO  reduce 38
	RPAREN  reduce 38
	RBRACE  reduce 38
	RBRACKET  reduce 38
	COMMA  reduce 38
	SEMICOLON  reduce 38

	op  goto 37
	compar  goto 38
	boolean  goto 39


Rules never reduced:
	decs : dec  (2)
	dec : tydec  (3)
	dec : vardec  (4)
	dec : fundecs  (5)
	tydec : TYPE ID EQUAL ty  (6)
	ty : ID  (7)
	ty : LBRACE tyfields RBRACE  (8)
	ty : ARRAY OF ID COLON ID  (9)
	tyfields :  (10)
	tyfields : tyfield  (11)
	tyfields : tyfields COMMA tyfield  (12)
	tyfield : ID COLON ID  (13)
	vardec : VAR ID ASSIGN exp  (14)
	fundecs : fundec  (15)
	fundecs : fundecs fundec  (16)
	fundec : FUNCTION ID LPAREN tyfields RPAREN resultty EQUAL exp  (17)
	resultty :  (18)
	resultty : COLON ID  (19)


State 10 contains 1 shift/reduce conflict.
State 54 contains 12 shift/reduce conflicts.
State 55 contains 12 shift/reduce conflicts.
State 56 contains 12 shift/reduce conflicts.


47 terminals, 22 nonterminals
61 grammar rules, 82 states
